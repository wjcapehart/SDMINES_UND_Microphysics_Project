# ============================================================================
#
#  Makefile Defaults:  Linux - intel
#
# =======================================================================
# $license_flag$
# =======================================================================
# --------------------------
#  Generic Compiler Notes:
# --------------------------
#
#    **NOTE: For MPI code any Name Mangling compatibility options should 
#            already be included in the mpif77/mpicc scripts. So it is
#            to aid in resolving problems with inconsistent installations,
#            MPI distributions that don't provide compiler scripts, and
#            serial components of the code.
#
# ============================================================================

# -----------------------------------------------------
#  Assume serial code.
# -----------------------------------------------------

ifndef MPI
  MPI=no
endif

# ------------------------------------------------------
#  Assume shared libraries
# ------------------------------------------------------

ifndef STATIC_LIBS
   STATIC_LIBS=no
endif

# ------------------------------------------------------
#   Default MPI distrubution
# ------------------------------------------------------

ifndef MPI_DIST
  MPI_DIST=mpich
endif

# ------------------------------------------------------
#  Default to GNU compilers.
# ------------------------------------------------------

ifndef COMPILER
  COMPILER=gnu
endif

# ------------------------------------------------------
#  GCC version
# ------------------------------------------------------

ifeq ($(COMPILER),gnu) 
  ifndef GCC_VER
    GCC_VER = $(shell gcc --version | grep gcc | sed -e 's/gcc (GCC) //' -e 's/\..*//')
  endif
endif

# ------------------------------------------------------
#  Default profiling
# ------------------------------------------------------

ifndef PROFILE
  PROFILE=no
endif

# -------------------------------
#  Generic Linux CPP flag
# -------------------------------

# CPPFLAGS += -DLINUX

# >>>>>>>>>>>>>>>>>>>>> SET: ABSOFT COMPILER OPTIONS <<<<<<<<<<<<<<<<<<<<<
ifeq ($(COMPILER),absoft) 

  #
  # Specify Fortran NameMangling__ 
  #
  ifndef FC_NAME_MANGLE
    FC_NAME_MANGLE=none
  endif

  ifeq ($(FC_NAME_MANGLE),double)
    F77_NAME_MANGLE = -f -B108
    F90_NAME_MANGLE = -YEXT_NAMES=LCS -YCOM_NAMES=LCS -B108
  else	
  ifeq ($(FC_NAME_MANGLE),none)
    F77_NAME_MANGLE = -f
    F90_NAME_MANGLE = -YEXT_NAMES=LCS -YCOM_NAMES=LCS
  endif
  endif

  ifeq ($(PROFILE),yes)
    F77_PROF_OPT = -P	
    F90_PROF_OPT = -P
    C_PROF_OPT   = -pg
    CXX_PROF_OPT = -pg
  else	
    F77_PROF_OPT = 
    F90_PROF_OPT = 
    C_PROF_OPT   = 
    CXX_PROF_OPT = 
  endif

  # =====================
  #  Flags:
  # =====================

  FFLAGS   = $(F77_PROF_OPT) $(F77_NAME_MANGLE)
  F90FLAGS = $(F90_PROF_OPT) $(F90_NAME_MANGLE)
  CFLAGS   = $(C_PROF_OPT)
  CXXFLAGS = $(CXX_PROF_OPT) 

  ifeq ($(CLEVEL),opt)
    ifndef TUNE
      TUNE = -cpu:host
    endif
    FFLAGS   += $(FINC) -s  $(TUNE) -O3
    F90FLAGS += $(FINC) -s -q -YCFRL=1 $(TUNE) -O3
    CFLAGS   += $(CINC) -Wall -O3
    CXXFLAGS += $(CINC) -Wall -O3
  else
    ifndef TUNE
      TUNE = -cpu:p5
    endif
    FFLAGS   += $(FINC) -s $(TUNE) -C -g
    F90FLAGS += $(FINC) -s -q -YCFRL=1 $(TUNE) -g
    CFLAGS   += $(CINC) -Wall -g
    CXXFLAGS += $(CINC) -Wall -g 
  endif

  # >>>>>>>>>>>>>>>>>>>>> ABSOFT: MPI <<<<<<<<<<<<<<<<<<<
  ifeq ($(MPI),yes)

    # =====================
    #  Compiler:	
    # =====================

    ifeq ($(MPI_DIST),mpich)

      FC  = mpif77
      F90 = mpif90 
      CC  = mpicc
      CXX = mpiCC

    else
    ifeq ($(MPI_DIST),lampi)

      FC  = f77
      F90 = f90
      CC  = gcc
      CXX = g++

      FFLAGS   += $(MPI_COMPILE_FLAGS)
      F90FLAGS += $(MPI_COMPILE_FLAGS)
      CFLAGS   += $(MPI_COMPILE_FLAGS)
      CXXFLAGS += $(MPI_COMPILE_FLAGS)

    endif
    endif

  # >>>>>>>>>>>>>>>>>>>>> ABSOFT: SERIAL <<<<<<<<<<<<<<<<
  else

    # =====================
    #  Compiler:
    # =====================

    FC  = f77
    F90 = f90
    CC  = gcc 
    CXX	= g++

  endif

  # =====================
  #  Linker:
  # =====================

  LD = ld
  LFLAGS = 

  ifeq ($(STATIC_LIBS),yes) 
    LD_STATIC = -X -static
  else
    LD_STATIC =
  endif

  F77_LD = $(FC)
  F77_LFLAGS = $(LD_STATIC)

  F90_LD = $(F90) $(FINC)
  F90_LFLAGS = $(LD_STATIC)

  CC_LD = $(CC)
  CC_LFLAGS = 

  CXX_LD = $(CXX)
  CXX_LFLAGS = 

  # ======================
  #  F90 module path:
  # ======================

  MPOPT = -p

  # ======================
  #  F90 module names:
  # ======================

  F90_MOD_MANGLE = upper

  # ======================
  #  Library search path:
  # ======================

  LPOPT = -L

  # ======================
  #  Library option:
  # ======================

  LLOPT = -l

  # ======================
  #  System libraries:
  # ======================

  SYSLIBS = -lU77

# >>>>>>>>>>>>>>>>>>>>> SET: PORTLAND GROUP COMPILER OPTIONS <<<<<<<<<<<<<
else
# elseif: begin
ifeq ($(COMPILER),portland)

  #
  # Specify Fortran NameMangling__ 
  #
  ifndef FC_NAME_MANGLE
    FC_NAME_MANGLE=single
  endif

  ifeq ($(FC_NAME_MANGLE),double)
    F77_NAME_MANGLE = -Mnoupcase -Msecond_underscore
    F90_NAME_MANGLE = -Mnoupcase -Msecond_underscore
  else	
  ifeq ($(FC_NAME_MANGLE),single)
    F77_NAME_MANGLE = -Mnoupcase
    F90_NAME_MANGLE = -Mnoupcase
  endif
  endif

  ifeq ($(PROFILE),yes)
    F77_PROF_OPT = -Mprof=func,lines
    F90_PROF_OPT = -Mprof=func,lines
    C_PROF_OPT   = -Mprof=func,lines
    CXX_PROF_OPT = -Mprof=func,lines
  else	
    F77_PROF_OPT = 
    F90_PROF_OPT = 
    C_PROF_OPT   = 
    CXX_PROF_OPT = 
  endif

  # =====================
  #  Flags:
  # =====================

  FFLAGS   = $(F77_PROF_OPT) $(F77_NAME_MANGLE)
  F90FLAGS = $(F90_PROF_OPT) $(F90_NAME_MANGLE)
  CFLAGS   = $(C_PROF_OPT)
  CXXFLAGS = $(CXX_PROF_OPT) 

  ifeq ($(CLEVEL),opt)
    ifndef TUNE
      TUNE =  -Munroll -Mscalarsse -Mvect=sse -Mcache_align -Mflushz
    endif
    FFLAGS   += $(FINC) $(TUNE) -O2 -Minline 
    F90FLAGS += $(FINC) $(TUNE) -O2 -Minline 
    CFLAGS   += $(CINC) -Minform=fatal -O2
    CXXFLAGS += $(CINC) -Minform=fatal -O2
  else
    FFLAGS   += $(FINC) -Minform=inform -Mbounds -g 
    F90FLAGS += $(FINC) -Minform=inform -Mbounds -g 
    CFLAGS   += $(CINC) -Minform=inform -g 
    CXXFLAGS += $(CINC) -Minform=inform -g 
  endif

  # >>>>>>>>>>>>>>>>>>>>> PORTLAND GROUP: MPI <<<<<<<<<<<<<<<<<<<
  ifeq ($(MPI),yes)

    # =====================
    #  Compiler:	
    # =====================

    ifeq ($(MPI_DIST),mpich)

      FC  = mpif77
      F90 = mpif90 
      CC  = mpicc
      CXX = mpiCC

    else
    ifeq ($(MPI_DIST),lampi)

      FC  = pgf77
      F90 = pgf90
      CC  = pgcc
      CXX = pgCC

      FFLAGS   += $(MPI_COMPILE_FLAGS)
      F90FLAGS += $(MPI_COMPILE_FLAGS)
      CFLAGS   += $(MPI_COMPILE_FLAGS)
      CXXFLAGS += $(MPI_COMPILE_FLAGS)

    endif
    endif


  # >>>>>>>>>>>>>>>>>>>>> PORTLAND GROUP: SERIAL <<<<<<<<<<<<<<<<
  else

    # =====================
    #  Compiler:
    # =====================

    FC  = pgf77
    F90 = pgf90
    CC  = pgcc 
    CXX = pgCC 

  endif

  # =====================
  #  Linker:
  # =====================

  LD = ld
  LFLAGS =

  ifeq ($(STATIC_LIBS),yes) 
    LD_STATIC = -Bstatic
  else
    LD_STATIC =
  endif

  F77_LD = $(FC)
  F77_LFLAGS = $(LD_STATIC)

  F90_LD = $(F90)
  F90_LFLAGS = $(LD_STATIC)

  CC_LD = $(CC)
  CC_LFLAGS = $(LD_STATIC)

  CXX_LD = $(CXX)
  CXX_LFLAGS = $(LD_STATIC)

  # ======================
  #  F90 modules path:
  # ======================

  MPOPT = -module 

  # ======================
  #  MOD case
  # ======================

  F90_MOD_MANGLE = lower

  # ======================
  #  F90 move modules
  # ======================

  MODMV = no

  # ======================
  #  Library search path:
  # ======================

  LPOPT = -L

  # ======================
  #  Library option:
  # ======================

  LLOPT = -l

  # ======================
  #  System libraries:
  # ======================

  SYSLIBS = 

  ifeq ($(MPI_DIST),lampi)
     SYSLIBS += $(MPI_LD_FLAGS) $(LLOPT)mpi
  endif

# elseif: end
# >>>>>>>>>>>>>>>>>>>>> SET: INTEL COMPILER OPTIONS <<<<<<<<<<<<<<<<<
else
# elseif: begin
ifeq ($(COMPILER),intel)

  #
  # Specify Fortran NameMangling__ 
  #
  ifndef FC_NAME_MANGLE
    FC_NAME_MANGLE=single
  endif

  ifeq ($(FC_NAME_MANGLE),double)
    F77_NAME_MANGLE = -assume 2underscores -names lowercase
    F90_NAME_MANGLE = -assume 2underscores -names lowercase
  else	
  ifeq ($(FC_NAME_MANGLE),single)
    F77_NAME_MANGLE = -assume underscore -names lowercase
    F90_NAME_MANGLE = -assume underscore -names lowercase
  else	
  ifeq ($(FC_NAME_MANGLE),none)
    F77_NAME_MANGLE = -assume nounderscore -names lowercase
    F90_NAME_MANGLE = -assume nounderscore -names lowercase
  endif
  endif
  endif

  ifeq ($(PROFILE),yes)
    F77_PROF_OPT =
    F90_PROF_OPT =
    C_PROF_OPT   =
    CXX_PROF_OPT =
  else	
    F77_PROF_OPT = 
    F90_PROF_OPT = 
    C_PROF_OPT   = 
    CXX_PROF_OPT = 
  endif

  # =====================
  #  Flags:
  # =====================

  FFLAGS   = $(F77_PROF_OPT) $(F77_NAME_MANGLE)
  F90FLAGS = $(F90_PROF_OPT) $(F90_NAME_MANGLE)
  CFLAGS   = $(C_PROF_OPT)
  CXXFLAGS = $(CXX_PROF_OPT) 

  ifeq ($(CLEVEL),opt)
    ifndef TUNE
      TUNE = 
    endif
    FFLAGS   += $(FINC) $(TUNE) -O3 
    F90FLAGS += $(FINC) $(TUNE) -O3 
    CFLAGS   += $(CINC) -O2
    CXXFLAGS += $(CINC) -O2
  else
    FFLAGS   += $(FINC) -align all -check bounds -fpe0 -g -warn all
    F90FLAGS += $(FINC) -align all -check bounds -fpe0 -g -warn all 
    CFLAGS   += $(CINC) -g -Wall -Wcheck
    CXXFLAGS += $(CINC) -g -Wall -Wcheck
  endif

  # >>>>>>>>>>>>>>>>>>>>> INTEL: MPI <<<<<<<<<<<<<<<<<<<<<<<<<<<<<

  ifeq ($(MPI),yes)

    # =====================
    #  Compiler:	
    # =====================

    ifeq ($(MPI_DIST),mpich)

      FC  = mpif77
      F90 = mpif90 
      CC  = mpicc
      CXX = mpiCC

    else
    ifeq ($(MPI_DIST),lampi)

      FC  = ifort
      F90 = ifort
      CC  = icc
      CXX = icpc

      FFLAGS   += $(MPI_COMPILE_FLAGS)
      F90FLAGS += $(MPI_COMPILE_FLAGS)
      CFLAGS   += $(MPI_COMPILE_FLAGS)
      CXXFLAGS += $(MPI_COMPILE_FLAGS)

    endif
    endif

  # >>>>>>>>>>>>>>>>>>>>> INTEL: SERIAL <<<<<<<<<<<<<<<<<<<<<<<<<<
  else

    # =====================
    #  Compiler:
    # =====================

    FC  = ifort
    F90 = ifort
    CC  = icc
    CXX = icpc

  endif

  # =====================
  #  Linker:
  # =====================

  LD = ld
  LFLAGS =

  ifeq ($(STATIC_LIBS),yes) 
    LD_STATIC = -Bstatic
  else
    LD_STATIC =
  endif

  F77_LD = $(FC)
  F77_LFLAGS = $(LD_STATIC)

  F90_LD = $(F90)
  F90_LFLAGS = $(LD_STATIC)

  CC_LD = $(CC)
  CC_LFLAGS =

  CXX_LD = $(CXX)
  CXX_LFLAGS =

  # ======================
  #  F90 modules path:
  # ======================

  MPOPT = -I

  # ======================
  #  MOD case
  # ======================

  F90_MOD_MANGLE = lower

  # ======================
  #  F90 move modules
  # ======================

  MODMV = no

  # ======================
  #  Library search path:
  # ======================

  LPOPT = -L

  # ======================
  #  Library option:
  # ======================

  LLOPT = -l

  # ======================
  #  System libraries:
  # ======================

  SYSLIBS = 

  ifeq ($(MPI_DIST),lampi)
     SYSLIBS += $(MPI_LD_FLAGS) $(LLOPT)mpi
  endif

else
# elseif: end
# >>>>>>>>>>>>>>>>>>>>> ELSE IF: GNU GCC 3.x OPTIONS  <<<<<<<<<<<<<<<<<
ifeq ($(COMPILER),gnu)
ifeq ($(GCC_VER),3)

  #
  # Specify Fortran NameMangling__ 
  #
  ifndef FC_NAME_MANGLE
    FC_NAME_MANGLE=double
  endif

  ifeq ($(FC_NAME_MANGLE),double)
    F77_NAME_MANGLE =
  else	
  ifeq ($(FC_NAME_MANGLE),single)
    F77_NAME_MANGLE = --no-second-underscore
  endif
  endif

  ifeq ($(PROFILE),yes)
    F77_PROF_OPT = -pg
    C_PROF_OPT   = -pg
    CXX_PROF_OPT = -pg
  else	
    F77_PROF_OPT = 
    C_PROF_OPT   = 
    CXX_PROF_OPT = 
  endif

  FFLAGS   = $(F77_PROF_OPT) $(F77_NAME_MANGLE)
  CFLAGS   = $(C_PROF_OPT)
  CXXFLAGS = $(CXX_PROF_OPT) 

  # =====================
  #  Flags:
  # =====================

  ifeq ($(CLEVEL),opt)
    FFLAGS   += $(FINC) -Wall -O3
    CFLAGS   += $(CINC) -Wall -O3
    CXXFLAGS += $(CINC) -Wall -O3
  else
    FFLAGS   += $(FINC) -Wall -g
    CFLAGS   += $(CINC) -Wall -g
    CXXFLAGS += $(CINC) -Wall -g
  endif

  # =====================
  #  COMPILER:
  # =====================

  ifeq ($(MPI),yes)

    ifeq ($(MPI_DIST),mpich)

      FC  = mpif77
      CC  = mpicc
      CXX = mpiCC

    else
    ifeq ($(MPI_DIST),lampi)

      FC  = g77
      F90 = gcc
      CC  = g++

      FFLAGS   += $(MPI_COMPILE_FLAGS)
      CFLAGS   += $(MPI_COMPILE_FLAGS)
      CXXFLAGS += $(MPI_COMPILE_FLAGS)

    endif
    endif

  else

    FC  = g77
    CC  = gcc 
    CXX = g++

  endif

  # =====================
  #  Linker:
  # =====================

  LD = ld
  LFLAGS = 

  ifeq ($(STATIC_LIBS),yes) 
    LD_STATIC = -Bstatic
  else
    LD_STATIC =
  endif

  F77_LD = $(FC)
  F77_LFLAGS = $(LD_STATIC)

  CC_LD     = $(CC)
  CC_LFLAGS = 

  CXX_LD     = $(CXX)
  CXX_LFLAGS = 

  # ======================
  #  Library search path:
  # ======================

  LPOPT = -L

  # ======================
  #  Library option:
  # ======================

  LLOPT = -l

  # ======================
  #  System libraries:
  # ======================

  SYSLIBS = 

  ifeq ($(MPI_DIST),lampi)
     SYSLIBS += $(MPI_LD_FLAGS) $(LLOPT)mpi
  endif

else
# >>>>>>>>>>>>>>>>>>>>> ELSE IF: GNU GCC 4.x OPTIONS  <<<<<<<<<<<<<<<<<
ifeq ($(GCC_VER),4)

  #
  # Specify Fortran NameMangling__ 
  #
  ifndef FC_NAME_MANGLE
    FC_NAME_MANGLE=single
  endif

  ifeq ($(FC_NAME_MANGLE),double)
    F77_NAME_MANGLE = -fsecond-underscore
    F90_NAME_MANGLE = -fsecond-underscore
  else	
  ifeq ($(FC_NAME_MANGLE),single)
    F77_NAME_MANGLE =
    F90_NAME_MANGLE =
  else
    F77_NAME_MANGLE = -fno-underscoring
    F90_NAME_MANGLE = -fno-underscoring
  endif
  endif

  ifeq ($(PROFILE),yes)
    F77_PROF_OPT = -pg
    F90_PROF_OPT = -pg
    C_PROF_OPT   = -pg
    CXX_PROF_OPT = -pg
  else	
    F77_PROF_OPT = 
    F90_PROF_OPT = 
    C_PROF_OPT   = 
    CXX_PROF_OPT = 
  endif

  FFLAGS   = $(F77_PROF_OPT) $(F77_NAME_MANGLE)
  F90FLAGS = $(F90_PROF_OPT) $(F90_NAME_MANGLE)
  CFLAGS   = $(C_PROF_OPT)
  CXXFLAGS = $(CXX_PROF_OPT) 

  # =====================
  #  Flags:
  # =====================

  #  turn off -Wunused-labels for now.
  ifeq ($(CLEVEL),opt)
    FFLAGS   += $(FINC) -Waliasing -Wsurprising -O3
    F90FLAGS += $(FINC) -Waliasing -Wsurprising -O3
    CFLAGS   += $(CINC) -Wall -O3
    CXXFLAGS += $(CINC) -Wall -O3
  else
    # -fbounds-check (hmm?)
    FFLAGS   += $(FINC) -Waliasing -Wsurprising -g
    F90FLAGS += $(FINC) -Waliasing -Wsurprising -g
    CFLAGS   += $(CINC) -Wall -g
    CXXFLAGS += $(CINC) -Wall -g
  endif

  # =====================
  #  COMPILER:
  # =====================

  ifeq ($(MPI),yes)

    ifeq ($(MPI_DIST),mpich)

      FC  = mpif77
      F90 = mpif90 
      CC  = mpicc
      CXX = mpiCC

    else
    ifeq ($(MPI_DIST),lampi)

      FC  = gfortran
      F90 = gfortran
      CC  = gcc
      CXX = g++

      FFLAGS   += $(MPI_COMPILE_FLAGS)
      F90FLAGS += $(MPI_COMPILE_FLAGS)
      CFLAGS   += $(MPI_COMPILE_FLAGS)
      CXXFLAGS += $(MPI_COMPILE_FLAGS)

    endif
    endif

  else

    FC  = gfortran
    F90 = gfortran
    CC  = gcc 
    CXX = g++

  endif

  # =====================
  #  Linker:
  # =====================

  LD = ld
  LFLAGS =

  ifeq ($(STATIC_LIBS),yes) 
    LD_STATIC = -static
  else
    LD_STATIC =
  endif

  F77_LD = $(FC)
  F77_LFLAGS = $(LD_STATIC)

  F90_LD = $(F90)
  F90_LFLAGS = $(LD_STATIC)

  CC_LD = $(CC)
  CC_LFLAGS =

  CXX_LD = $(CXX)
  CXX_LFLAGS =

  # ======================
  #  F90 modules path:
  # ======================

  MPOPT = -M

  # ======================
  #  MOD case
  # ======================

  F90_MOD_MANGLE = lower

  # ======================
  #  F90 move modules
  # ======================

  MODMV = no

  # ======================
  #  Library search path:
  # ======================

  LPOPT = -L

  # ======================
  #  Library option:
  # ======================

  LLOPT = -l

  # ======================
  #  System libraries:
  # ======================

  SYSLIBS =

  ifeq ($(MPI_DIST),lampi)
     SYSLIBS += $(MPI_LD_FLAGS) $(LLOPT)mpi
  endif

endif
endif
endif
endif
endif
endif

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ENDIF <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# ======================
#  Archiver:
# ======================

AR = ar
ARFLAGS = csrv 

RANLIB = ranlib

# ======================
#  Make
# ======================

MFLAGS = --no-print-directory
MAKE = make

# ======================
#  Tools: 
# ======================

MV = /bin/mv 
RM = /bin/rm
CP = /bin/cp
CD = cd

MKDIR = /bin/mkdir

CHMOD = /bin/chmod
CHGRP = /bin/chgrp

# ============================================================================
